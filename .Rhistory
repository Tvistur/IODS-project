ggtitle("Age by alcohol consumption and sex")
# Chunk 7: age - correlation
summary(alc$age)
cor(alc$high_use, alc$age, use = "everything", method = "pearson")
# Chunk 8: goout - boxplot
ggplot(alc, aes(x = high_use, y = goout)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Going out with friends by alcohol consumption and sex")
# Chunk 9: goout - correlation
summary(alc$goout)
cor(alc$high_use, alc$goout, use = "everything", method = "pearson")
# Chunk 10: famrel - boxplot
ggplot(alc, aes(x = high_use, y = famrel)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Quality of family relationships by alcohol consumption and sex")
# Chunk 11: famre - correlation
summary(alc$famrel)
cor(alc$high_use, alc$famrel, use = "everything", method = "pearson")
# Chunk 12: absences - boxplot
ggplot(alc, aes(x = high_use, y = absences)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Final grade by alcohol consumption and sex")
# Chunk 13: absences - correlation
cor(alc$high_use, alc$absences, use = "everything", method = "pearson")
# Chunk 14: logistic regression model
model <- glm(high_use ~ age + goout + famrel + absences, data = alc, family = "binomial")
summary(model)
# Chunk 15: OR and CI
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
# Chunk 16: new model
model_new <- glm(high_use ~ goout + famrel + absences, data = alc, family = "binomial")
# Chunk 17: high_use: prediction vs actual
ggplot(alc, aes(x = probability, y = high_use, col = prediction)) +
geom_point(aes(col = prediction))
# Chunk 18: high_use: prediction vs actual
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
# Chunk 19: training error
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = 0)
loss_func(class = alc$high_use, prob = 1)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = 0)
loss_func(class = alc$high_use, prob = 1)
loss_func(alc$high_use, alc$prediction)
library(boot)
cv10 <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
loss_func(alc$high_use, alc$prediction)
library(boot)
cv10 <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv10$delta[1]
loss_func(alc$high_use, alc$prediction)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv10$delta[1]
cv$delta[1]
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
loss_func(alc$high_use, alc$prediction)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model, K = 10)
cv$delta[1]
colnames(alc)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv$delta[1]
summary(model1)
model1 <- glm(high_use ~ address + reason + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(model1)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
summary(model1)
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv$delta[1]
model2 <- glm(high_use ~ address + reason + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv$delta[1]
model2 <- glm(high_use ~ address + reason + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model2, K = 10)
cv$delta[1]
summary(model2)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
summary(model1)
model2 <- glm(high_use ~ address + reason + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_2 <- cv.glm(data = alc, cost = loss_func, glmfit = model2, K = 10)
cv_2$delta[1]
summary(model2)
model3 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_2$delta[1]
summary(model2)
cv_2$delta[1]
cv_3$delta[1]
summary(model2)
summary(model3)
model3 <- glm(high_use ~ studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_3$delta[1]
summary(model3)
model4 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_4 <- cv.glm(data = alc, cost = loss_func, glmfit = model4, K = 10)
cv_4$delta[1]
cv_1$delta[1]
cv_2$delta[1]
cv_3$delta[1]
cv_4$delta[1]
cv$delta[1]
cv_1$delta[1]
cv_2$delta[1]
cv_3$delta[1]
cv_4$delta[1]
cv$delta[1]
cv$delta[1]
cv_4$delta[1]
cv_3$delta[1]
summary(model3)
model3 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_3$delta[1]
summary(model3)
cv_3$delta[1]
ﬁ
cv$delta[1]
cv_1$delta[1]
cv_2$delta[1]
cv_3$delta[1]
cv_4$delta[1]
cv$delta[1]
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
addmargins()
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
model <- glm(high_use ~ age + goout + famrel + absences, data = alc, family = "binomial")
summary(model)
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
model_new <- glm(high_use ~ goout + famrel + absences, data = alc, family = "binomial")
summary(model_new)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
summary(model1)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
cv$delta[1]
cv_1$delta[1]
model2 <- glm(high_use ~ address + reason + studytime + paid + freetime + health + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_2 <- cv.glm(data = alc, cost = loss_func, glmfit = model2, K = 10)
cv_2$delta[1]
summary(model2)
model3 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_3$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 20)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 20)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 20)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
summary(model1)
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 30)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
knitr::opts_chunk$set(include= TRUE,
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 10,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
echo = FALSE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
library(tidyr)
library(ggplot2)
library(dplyr)
library(GGally)
library(boot)
alc <- read.csv("data/alc.csv")
dim(alc)
colnames(alc)
ggplot(alc, aes(x = high_use, y = age)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Age by alcohol consumption and sex")
summary(alc$age)
cor(alc$high_use, alc$age, use = "everything", method = "pearson")
ggplot(alc, aes(x = high_use, y = goout)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Going out with friends by alcohol consumption and sex")
summary(alc$goout)
cor(alc$high_use, alc$goout, use = "everything", method = "pearson")
ggplot(alc, aes(x = high_use, y = famrel)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Quality of family relationships by alcohol consumption and sex")
summary(alc$famrel)
cor(alc$high_use, alc$famrel, use = "everything", method = "pearson")
ggplot(alc, aes(x = high_use, y = absences)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Final grade by alcohol consumption and sex")
cor(alc$high_use, alc$absences, use = "everything", method = "pearson")
model <- glm(high_use ~ age + goout + famrel + absences, data = alc, family = "binomial")
summary(model)
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
model_new <- glm(high_use ~ goout + famrel + absences, data = alc, family = "binomial")
summary(model_new)
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
summary(model1)
model2 <- glm(high_use ~ address + reason + studytime + paid + freetime + health + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_2 <- cv.glm(data = alc, cost = loss_func, glmfit = model2, K = 10)
cv_2$delta[1]
model3 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_3$delta[1]
summary(model3)
model4 <- glm(high_use ~  studytime + goout + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model4, K = 10)
cv_3$delta[1]
model4 <- glm(high_use ~  studytime + goout + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_4 <- cv.glm(data = alc, cost = loss_func, glmfit = model4, K = 10)
cv_4$delta[1]
model4 <- glm(high_use ~  studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_4 <- cv.glm(data = alc, cost = loss_func, glmfit = model4, K = 10)
cv_4$delta[1]
model3 <- glm(high_use ~ address + studytime + goout + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_5 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_5$delta[1]
# Chunk 1: setup
knitr::opts_chunk$set(include= TRUE,
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.width = 10,
fig.asp = 0.618,
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
echo = FALSE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
# Chunk 2: preliminaries
library(tidyr)
library(ggplot2)
library(dplyr)
library(GGally)
library(boot)
# Chunk 3: import data
alc <- read.csv("data/alc.csv")
# Chunk 4: dimensions
dim(alc)
# Chunk 5: data variables
colnames(alc)
# Chunk 6: age - boxplot
ggplot(alc, aes(x = high_use, y = age)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Age by alcohol consumption and sex")
# Chunk 7: age - correlation
summary(alc$age)
cor(alc$high_use, alc$age, use = "everything", method = "pearson")
# Chunk 8: goout - boxplot
ggplot(alc, aes(x = high_use, y = goout)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Going out with friends by alcohol consumption and sex")
# Chunk 9: goout - correlation
summary(alc$goout)
cor(alc$high_use, alc$goout, use = "everything", method = "pearson")
# Chunk 10: famrel - boxplot
ggplot(alc, aes(x = high_use, y = famrel)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Quality of family relationships by alcohol consumption and sex")
# Chunk 11: famre - correlation
summary(alc$famrel)
cor(alc$high_use, alc$famrel, use = "everything", method = "pearson")
# Chunk 12: absences - boxplot
ggplot(alc, aes(x = high_use, y = absences)) +
geom_boxplot(aes(col = sex)) +
coord_flip() +
ggtitle("Final grade by alcohol consumption and sex")
# Chunk 13: absences - correlation
cor(alc$high_use, alc$absences, use = "everything", method = "pearson")
# Chunk 14: logistic regression model
model <- glm(high_use ~ age + goout + famrel + absences, data = alc, family = "binomial")
summary(model)
# Chunk 15: OR and CI
OR <- coef(model) %>% exp
CI <- confint(model) %>% exp
cbind(OR, CI)
# Chunk 16: new model
model_new <- glm(high_use ~ goout + famrel + absences, data = alc, family = "binomial")
summary(model_new)
# Chunk 17: high_use: prediction vs actual
probabilities <-predict(model_new, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <-  mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins()
# Chunk 18: training error
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
# Chunk 19: 10-fold cross-validation
loss_func(alc$high_use, alc$prediction)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = model_new, K = 10)
cv$delta[1]
# Chunk 20: model1
model1 <- glm(high_use ~ address + school + famsize + Pstatus + reason + internet + traveltime + studytime + failures + schoolsup + famsup + paid + activities + higher + romantic + freetime + health + G1 + G2 + G3+  age + goout + famrel + absences, data = alc, family = "binomial")
cv_1 <- cv.glm(data = alc, cost = loss_func, glmfit = model1, K = 10)
cv_1$delta[1]
# Chunk 21: model1 summary
summary(model1)
# Chunk 22: model2
model2 <- glm(high_use ~ address + reason + studytime + paid + freetime + health + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_2 <- cv.glm(data = alc, cost = loss_func, glmfit = model2, K = 10)
cv_2$delta[1]
# Chunk 23: model2 summary
summary(model2)
# Chunk 24: model3
model3 <- glm(high_use ~ address + studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_3 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_3$delta[1]
# Chunk 25: model3 summary
summary(model3)
# Chunk 26: model4 -address
model4 <- glm(high_use ~  studytime + goout + famrel + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_4 <- cv.glm(data = alc, cost = loss_func, glmfit = model4, K = 10)
cv_4$delta[1]
# Chunk 27: model5 -famrel
model3 <- glm(high_use ~ address + studytime + goout + absences, data = alc, family = "binomial")
loss_func(alc$high_use, alc$prediction)
cv_5 <- cv.glm(data = alc, cost = loss_func, glmfit = model3, K = 10)
cv_5$delta[1]
cv$delta[1]
cv_1$delta[1]
cv_2$delta[1]
cv_3$delta[1]
cv_4$delta[1]
cv_5$delta[1]
summary(model3)
cv_4$delta[1]
install.packages(c("data.table", "digest", "mgcv", "nlme", "tidyverse"))
