library(dplyr)
GNI_life_edu <- select(c("GNI", "life_exp", "edu_exp"))
GNI_life_edu <- human[c("GNI", "life_exp", "edu_exp")]
gather(GNI_life_edu) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_line()
GNI_life <- ggplot(GNI_life_edu, aes(GNI)) +
geom_line()
GNI_edu <- ggplot(GNI_life_edu, aes(GNI)) +
geom_line()
grid.arrange(GNI_life, GNI_edu, ncol = 2)
library(grid)
grid.arrange(GNI_life, GNI_edu, ncol = 2)
GNI_life <- ggplot(GNI_life_edu, aes(GNI)) +
geom_line()
GNI_edu <- ggplot(GNI_life_edu, aes(GNI)) +
geom_line()
grid.arrange(GNI_life, GNI_edu, ncol = 2)
library(grid)
grid.arrange(GNI_life, GNI_edu, ncol = 2)
library(gridExtra)
grid.arrange(GNI_life, GNI_edu, ncol = 2)
GNI_life <- ggplot(GNI_life_edu, aes(GNI, life_exp)) +
geom_line()
GNI_edu <- ggplot(GNI_life_edu, aes(GNI, edu_exp)) +
geom_line()
grid.arrange(GNI_life, GNI_edu, ncol = 2)
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_line()
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_line()
grid.arrange(GNI_life, GNI_edu, ncol = 2)
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_line() +
labs(x = "Gross National Income", y = "Life expectancy at birth")
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_line() +
labs(x = "Gross National Income", y = "Excepted years of schooling")
grid.arrange(GNI_life, GNI_edu, ncol = 2)
summary(human$life_exp)
summary(human$edu_exp)
summary(human)
life_edu <- ggplot(human, aes(life_exp, edu_exp)) +
geom_line() +
labs(x = "Life expectancy at birth", y = "Expected years of schooling")
adol_mat <- ggplot(human, aes(adol_birth, mat_mort)) +
geom_line() +
labs(x = "Adolescent birth rate", y = "Maternal mortality ratio")
grid.arrange(life_edu, adol_mat, ncol = 2)
summary(human$GNI)
summary(human$edu_exp)
summary(human$life_exp)
summary(human$edu_exp)
library(pander)
library(psych)
summary(human)
ggpairs(human, mapping = aes(col = "royalblue", alpha = 0.3), lower = list(combo = wrap("facethist", bins = 50)))
ggpairs(human, mapping = aes(col = "royalblue", alpha = 0.3), lower = list(combo = wrap("facethist", bins = 50)))
ggpairs(human, mapping = aes(col = "royalblue", alpha = 0.3))
mat_life <- ggplot(human, aes(mat_mort, life_exp)) +
geom_line() +
labs(x = "Maternal mortality ratio", y = "Life expectancy at birth")
mat_edu <- ggplot(human, aes(mat_mort, edu_exp)) +
geom_line() +
labs(x = "Maternal mortality ratio", y = "Expected years of schooling")
grid.arrange(mat_life, mat_edu, ncol = 2)
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Life expectancy at birth")
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Excepted years of schooling")
grid.arrange(GNI_life, GNI_edu, ncol = 2)
life_edu <- ggplot(human, aes(life_exp, edu_exp)) +
geom_jitter() +
labs(x = "Life expectancy at birth", y = "Expected years of schooling")
adol_mat <- ggplot(human, aes(adol_birth, mat_mort)) +
geom_jitter() +
labs(x = "Adolescent birth rate", y = "Maternal mortality ratio")
grid.arrange(life_edu, adol_mat, ncol = 2)
mat_life <- ggplot(human, aes(mat_mort, life_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Life expectancy at birth")
mat_edu <- ggplot(human, aes(mat_mort, edu_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Expected years of schooling")
grid.arrange(mat_life, mat_edu, ncol = 2)
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, col = c("royalblue", "deeppink2"))
# summary of pca_human
s <- summary(pca_human)
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# print out the percentages of variance
pca_pr
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
s
s
human_std <- scale(human)
pca_human_std <-prcomp(human_std)
s <- summary(pca_human_std)
pca_pr <- round(100*s$importance[2, ], digits = 1)
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
pca_human <- prcomp(human)
# summary of pca_human
s <- summary(pca_human)
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
human_std <- scale(human)
?biplot
human_std <- scale(human)
pca_human_std <-prcomp(human_std)
s <- summary(pca_human_std)
pca_pr_std <- round(100*s$importance[2, ], digits = 1)
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
install.packages("FactoMineR")
library(FactoMineR)
load(tea_time)
data(tea)
str(tea)
dim(tea)
ggpairs(tea, mapping = aes(col = "royalblue", alpha = 0.3))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
ggpairs(tea)
gather(tea) %>%
ggplot(aes(value)) +
geom_bar
gather(tea) %>%
ggplot(aes(value)) +
geom_bar +
facet_wrap()
gather(tea) %>%
ggplot(aes(value)) +
geom_bar +
facet_wrap()
str(tea)
tea_how <- tea[c("breakfast", "tea.time", "evening", "lunch", "dinner", "always", "home", "work", "tearoom", "friends", "resto", "pub","Tea", "How", "sugar", "how", "where", "price", "frequency")]
ggpairs(tea_how)
gather(tea_how) %>%
ggplot() +
geom_bar() +
facet_wrap()
tea_perception <- tea[c("escape.exoticism", "spirituality", "healthy", "diuretic", "friendliness", "iron.absorption", "feminine", "sophisticated", "slimming", "exciting" , "relaxing", "effect.on.health")]
gather(tea_perception) %>%
ggplot() +
geom_bar() +
facet_wrap()
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot() +
geom_bar() +
facet_wrap()
?facet_wrap
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot() +
geom_bar() +
facet_wrap(~class)
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot() +
geom_bar() +
facet_wrap(~class)
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar()
tea_perception <- tea[c("escape.exoticism", "spirituality", "healthy", "diuretic", "friendliness", "iron.absorption", "feminine", "sophisticated", "slimming", "exciting" , "relaxing", "effect.on.health")]
gather(tea_perception) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar()
tea_how <- tea[c("breakfast", "tea.time", "evening", "lunch", "dinner", "always", "home", "work", "tearoom", "friends", "resto", "pub","Tea", "How", "sugar", "how", "where", "price", "frequency")]
gather(tea_how) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar()
mca <- MCA(tea, graph = FALSE)
mca <- mca(tea)
library(FactoMineR)
mca <- MCA(tea, graph = FALSE)
tea_notage <- tea[-age]
tea_notage <- tea %>%
select(-age)
mca1 <- MCA(tea_notage, graph = FALSE)
summary(mca1)
plot(mca1, invisible = c("ind"), habillage = "quali")
plotellipses(tea_notage, keepvar = c(20:23))
plotellipses(tea_notage, keepvar=c(20:23))
?plot
str(tea)
keep <- c("Tea", "How", "how", "where", "sugar", "price", "sex", "relaxing", "home")
tea_habit <- select(tea, one_of(keep))
keep <- c("Tea", "How", "how", "where", "sugar", "price", "sex", "relaxing", "home")
tea_habit <- select(tea, one_of(keep))
mca2 <- MCA(tea_habit, graph = FALSE)
summary(mca2)
plot(mca2, invisible=c("ind"), habillage = "quali")
keep <- c("Tea", "How", "how", "where", "sugar", "price", "relaxing", "home")
tea_habit <- select(tea, one_of(keep))
mca2 <- MCA(tea_habit, graph = FALSE)
summary(mca2)
plot(mca1, invisible = c("ind"), habillage = "quali")
plot(mca2, invisible = c("ind"), habillage = "quali")
ggplot(data = mca2, aes(x = Dim.1, y = Dim.2, rownames(mca2)), invisible = c("ind"), habillage = "quali")
mca2_vars_df = data.frame(mca2$var$coord, Variable = rep(names(cats),
cats))
mca2_obs_df = data.frame(mca2$ind$coord)
ggplot(data = mca2_obs_df, aes(x = Dim.1, y = Dim.2)) + geom_hline(yintercept = 0,
colour = "gray70") + geom_vline(xintercept = 0, colour = "gray70") + geom_point(colour = "gray50",
alpha = 0.7) +
geom_density2d(colour = "gray80") +
geom_text(data = mca2_vars_df,
aes(x = Dim.1, y = Dim.2, label = rownames(mca2_vars_df), colour = Variable)) +
scale_colour_discrete(name = "Variable")
mca2_vars_df = data.frame(mca2$var$coord, Variable = rep(names(cats),
cats))
mca2_obs_df = data.frame(mca2$ind$coord)
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "royalblue")
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "skyblue")
tea_perception <- tea[c("escape.exoticism", "spirituality", "healthy", "diuretic", "friendliness", "iron.absorption", "feminine", "sophisticated", "slimming", "exciting" , "relaxing", "effect.on.health")]
gather(tea_perception) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "skyblue")
describe(tea)
head(human)
describe(human)
?describe
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
install.packages("ggfortify")
library(ggfortify)
s <- summary(pca_human_std)
pca_pr_std <- round(100*s$importance[2, ], digits = 1)
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
s
?autoplot
plot(mca1, col = "Species", invisible = c("ind"), habillage = "quali")
biplot(pca_human_std, cex = c(0.8, 1), col = "Species", xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
legend("topright", pch = 20, col=unique(cyl), legend = unique(cyl)))
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
legend("topright", pch = 20, col=unique(cyl), legend = unique(cyl)))
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human_std, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.3, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(legend.position = "right")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
legend(c("xxx", "yyy"))
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(text = element_text(size = 15),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none"))
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(text = element_text(size = 15),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="none")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(text = element_text(size = 15),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.position="right")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(text = element_text(size = 15),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white")
human_std <- scale(human)
knitr::opts_chunk$set(include= TRUE,
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
echo = FALSE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
library(ggplot2)
library(GGally)
library(corrplot)
library(tidyr)
library(dplyr)
library(gridExtra)
library(pander)
library(psych)
library(FactoMineR)
library(ggfortify)
human <- read.csv("data/human_new.csv", header = TRUE, sep = ",", row.names = 1)
human <- human[c("GNI", "life_exp", "edu_exp", "mat_mort", "adol_birth", "parl_rep", "edu2_FM", "lab_FM")]
head(human)
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Life expectancy at birth")
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Excepted years of schooling")
grid.arrange(GNI_life, GNI_edu, ncol = 2)
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Life expectancy at birth")
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Excepted years of schooling")
grid.arrange(GNI_life, GNI_edu, ncol = 2)
life_edu <- ggplot(human, aes(life_exp, edu_exp)) +
geom_jitter() +
labs(x = "Life expectancy at birth", y = "Expected years of schooling")
adol_mat <- ggplot(human, aes(adol_birth, mat_mort)) +
geom_jitter() +
labs(x = "Adolescent birth rate", y = "Maternal mortality ratio")
grid.arrange(life_edu, adol_mat, ncol = 2)
mat_life <- ggplot(human, aes(mat_mort, life_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Life expectancy at birth")
mat_edu <- ggplot(human, aes(mat_mort, edu_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Expected years of schooling")
grid.arrange(mat_life, mat_edu, ncol = 2)
pca_human <- prcomp(human)
# summary of pca_human
s <- summary(pca_human)
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
theme(text = element_text(size = 15),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
s
s
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2]) +
ggtitle("Hello world")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2")) +
labs(x = pc_lab[1], y = pc_lab[2], title = "HELOO WORLD"))
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2")) +
labs(x = pc_lab[1], y = pc_lab[2], title = "HELLO WORLD")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2], main = "HELLO WORLD")
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2")) +
labs(x = pc_lab[1], y = pc_lab[2], title = "HELLO WORLD")
# Chunk 1: setup ch 5
knitr::opts_chunk$set(include= TRUE,
tidy = FALSE,
size = "small",
out.width = "70%",
fig.align = "center",
fig.show = "hold",
fig.path = "../figures/document/",
cache.path = "../cache/document/",
cache = TRUE,
par = TRUE,
collapse = TRUE,
echo = FALSE,
message = FALSE,
warning = FALSE
)
options(digits = 3)
options(table_counter = TRUE)
# Chunk 2: preliminaries ch5
library(ggplot2)
library(GGally)
library(corrplot)
library(tidyr)
library(dplyr)
library(gridExtra)
library(pander)
library(psych)
library(FactoMineR)
library(ggfortify)
# Chunk 3: import data ch5
human <- read.csv("data/human_new.csv", header = TRUE, sep = ",", row.names = 1)
# Chunk 4: reorder columns
human <- human[c("GNI", "life_exp", "edu_exp", "mat_mort", "adol_birth", "parl_rep", "edu2_FM", "lab_FM")]
# Chunk 5: overview ch5
head(human)
# Chunk 6: stats
summary(human)
# Chunk 7: overview pairs
ggpairs(human, mapping = aes(col = "royalblue", alpha = 0.3))
# Chunk 8: GNI and life_exp and edu_exp
GNI_life <- ggplot(human, aes(GNI, life_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Life expectancy at birth")
GNI_edu <- ggplot(human, aes(GNI, edu_exp)) +
geom_jitter() +
labs(x = "Gross National Income", y = "Excepted years of schooling")
grid.arrange(GNI_life, GNI_edu, ncol = 2)
# Chunk 9
life_edu <- ggplot(human, aes(life_exp, edu_exp)) +
geom_jitter() +
labs(x = "Life expectancy at birth", y = "Expected years of schooling")
adol_mat <- ggplot(human, aes(adol_birth, mat_mort)) +
geom_jitter() +
labs(x = "Adolescent birth rate", y = "Maternal mortality ratio")
grid.arrange(life_edu, adol_mat, ncol = 2)
# Chunk 10
mat_life <- ggplot(human, aes(mat_mort, life_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Life expectancy at birth")
mat_edu <- ggplot(human, aes(mat_mort, edu_exp)) +
geom_jitter() +
labs(x = "Maternal mortality ratio", y = "Expected years of schooling")
grid.arrange(mat_life, mat_edu, ncol = 2)
# Chunk 11: PCA with SVD on original dataset
pca_human <- prcomp(human)
# Chunk 12: prepare for PCA biplot
# summary of pca_human
s <- summary(pca_human)
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# Chunk 13: PCA biplot
biplot(pca_human, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2], main = "HELLO WORLD")
# Chunk 14: standardize human
human_std <- scale(human)
# Chunk 15: PCA with SVD on standardized dataset
pca_human_std <-prcomp(human_std)
# Chunk 16: prepare for PCA biplot
s <- summary(pca_human_std)
s
pca_pr_std <- round(100*s$importance[2, ], digits = 1)
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr, "%)")
# Chunk 17: PCA biplot starndardize
biplot(pca_human_std, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
# Chunk 18: load tea data
data(tea)
# Chunk 19: sturture of tea
dim(tea)
str(tea)
# Chunk 20: visual tea how
tea_how <- tea[c("breakfast", "tea.time", "evening", "lunch", "dinner", "always", "home", "work", "tearoom", "friends", "resto", "pub","Tea", "How", "sugar", "how", "where", "price", "frequency")]
gather(tea_how) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "skyblue")
# Chunk 21: visual tea perception
tea_perception <- tea[c("escape.exoticism", "spirituality", "healthy", "diuretic", "friendliness", "iron.absorption", "feminine", "sophisticated", "slimming", "exciting" , "relaxing", "effect.on.health")]
gather(tea_perception) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "skyblue")
# Chunk 22: visual tea personal
tea_personal <- tea[c("age", "sex", "SPC", "Sport", "age_Q")]
gather(tea_personal) %>%
ggplot(aes(value)) +
facet_wrap("key", scales = "free") +
geom_bar(fill = "skyblue")
# Chunk 23: MCA not age
tea_notage <- tea %>%
select(-age)
mca1 <- MCA(tea_notage, graph = FALSE)
summary(mca1)
# Chunk 24: MCA biplot 1
plot(mca1, invisible = c("ind"), habillage = "quali")
# Chunk 25: MCA selected
keep <- c("Tea", "How", "how", "where", "sugar", "price", "relaxing", "home")
tea_habit <- select(tea, one_of(keep))
mca2 <- MCA(tea_habit, graph = FALSE)
summary(mca2)
# Chunk 26: MCA biplot 2
plot(mca2, invisible = c("ind"), habillage = "quali")
biplot(pca_human_std, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2], main = "hello universe")
rownames(human_std)<-human_std[,1]
```
s <- summary(pca_human_std)
s
pca_pr_std <- round(100*s$importance[2, ], digits = 1)
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human_std, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2], main = "hello universe")
